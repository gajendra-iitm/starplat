function Compute_SSSP_prev (Graph g,propNode<int> dist, propEdge<int> weight, node src)
{    
     propNode <bool> modified;
     g.attachNodeProperty(dist=INF, modified = False);
     src.modified = True; 
     src.dist=0;
     bool finished =False;
     fixedPoint until (finished:!modified)
     {
          forall (v in g.nodes().filter(modified == True) )
          {
               forall (nbr in g.neighbors(v))
               {          
                    edge e = g.get_edge(v, nbr);
                    if(nbr.dist > v.dist + e.weight)
                    {
                         nbr.dist = v.dist + e.weight;
                         nbr.modified = True;
                    }                        
               }
          }
     }          
}