Dynamic recalculate_max_flow(Graph g, updates<g> updateBatch, int batchSize, int source,int sink){
    propEdge<int>rev_residual_capacity;
    propEdge<int>residual_capacity;
    Batch(updateBatch:batchSize) {
    OnAdd(u in updateBatch.currentBatch()):{
            int uedge = -1;
            int src = u.source;
            int dest = u.destination;
            int new_capacity = u.weight;
            for(dd in g.neighbors(src)){
              if(dd==dest){
                  uedge = g.get_edge(src,dd);
              }
            }
            if(new_capacity<uedge.weight){
              if(uedge.rev_residual_capacity>new_capacity){
                uedge.rev_residual_capacity = new_capacity;
              }
              uedge.residual_capacity = new_capacity - uedge.rev_residual_capacity;
            } else{
               uedge.residual_capacity =  uedge.residual_capacity + new_capacity - uedge.weight;
            }
            uedge.weight = new_capacity;
            
        }           
    } 
}