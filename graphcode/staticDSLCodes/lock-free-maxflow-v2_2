function do_max_flow (Graph g, int source, int sink) {

    propNode<int> height;
    g.attachNodeProperty (height = 0) ;
    source.height = g.num_nodes();
    
    propNode<int> excess;
    g.attachNodeProperty (excess = 0) ;
	
	propEdge<int> residual_capacity;
	propEdge<int> rev_residual_capacity;
	propEdge<int> reverse_edge;
	forall(v in g.nodes()){
		for(dst in g.neighbors(v)){
			edge e1 = g.get_edge(v,dst);
			e1.residual_capacity = e1.weight;
			e1.rev_residual_capacity = 0;
			// for(vv in g.neighbors(dst)){
			// 	if(vv == v){
			// 		edge rev = g.get_edge(dst,vv);
			// 		e1.reverse_edge = rev;
			// 	}
			// }
		}
	}
	
	forall(v in g.nodes()){
		for(vv in g.nodes_to(v)){
			edge rev_e = g.get_edge(vv,v);
			for( vvv in g.neighbors(vv)){
				edge e = g.get_edge(vv,vvv);
				if(vvv==v){
					rev_e.reverse_edge = e;
				}
			}
		}
	}

	forall (v in g.nodes().filter(v==source)) {
		for(vv in g.neighbors(v)){
			edge forward_edge = g.get_edge(v, vv) ;
			int d = forward_edge.residual_capacity;
			int backward_edge = forward_edge.reverse_edge;
			vv.excess += d;
			v.excess-=d;
			forward_edge.residual_capacity -= d;
			backward_edge.residual_capacity += d;
		}
    }
    
	bool flag=true;

	do{
		flag = false;
        forall (v in g.nodes().filter(v.excess>0 && v!=source && v!=sink )) {
			flag = true;
			int hh = INT_MAX;
			int v_0 = -1;
			int forward_edge = -1;
			int backward_edge = -1;
			for(vv in g.nodes_to(v)) {
				edge e = g.get_edge(v,vv);
				int xxx=e.residual_capacity;
				if(vv.height<hh && xxx >0){
					v_0=vv;
					hh=vv.height;
					forward_edge = e;
				}
			}

			if(v.height>hh && v_0!=-1){
        	    int backward_edge = forward_edge.reverse_edge ;
				int fec = forward_edge.residual_capacity;
				int d=fec;
				if(v.excess<fec){
					d=v.excess;
				}
				v.excess -= d ;
        	    v_0.excess += d ;
				forward_edge.residual_capacity -= d ;
        	    backward_edge.residual_capacity += d ;
			}
			else if(v_0!=-1){
				v.height = hh + 1;
			}
        }
    }while(flag);    
}
